<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <script src="https://www.w3.org/Tools/respec/respec-w3c" async class="remove"></script>
    <title>UO Sensor Networks</title>
    <script class="remove">
      var respecConfig = {
        specStatus: "unofficial",
        subtitle: "Interoperability in observations from real-time sensor networks",
        shortName: "short-name",
        editors: [{
          name: "Luke Smith",
          company: "Newcastle University",
          companyURL: "https://www.ncl.ac.uk/",
          url: "https://www.ncl.ac.uk/engineering/staff/profile/lukesmith.html"
        }],
        authors: [{
          name: "Simon Bell",
          company: "University of Birmingham",
          companyURL: "https://www.birmingham.ac.uk/",
          url: "https://www.birmingham.ac.uk/schools/gees/people/profile.aspx?ReferenceId=96947&Name=dr-simon-bell"
        }, {
          name: "Aare Puussaar",
          company: "Newcastle University",
          companyURL: "https://www.ncl.ac.uk/",
          url: "https://github.com/aarepuu"
        }, {
          name: "Ettore Murabito",
          company: "University of Manchester",
          companyURL: "https://www.manchester.ac.uk/",
          url: "https://scholar.google.co.uk/citations?user=mJGaPuQAAAAJ&hl=en"
        }],
        license: "cc-by",
        logos: [{
          src: "http://urbanobservatory.ac.uk/img/logo.svg",
          href: "http://www.urbanobservatory.ac.uk/",
          alt: "Urban Observatory",
          width: 300,
          id: "urbanobs-logo"
        }],
        github: "https://github.com/urbanobservatory/standards",
        localBiblio: {
          "hydra-core": {
            title: "Hydra Core Vocabulary",
            href: "https://www.hydra-cg.com/spec/latest/core/",
            status: "UD",
            publisher: "Hydra W3C Community Group"
          },
          "geojson-ld": {
            title: "GEOJSON-LD",
            href: "http://geojson.org/geojson-ld/",
            status: "UD",
            publisher: "Mapbox"
          },
          "CityGML": {
            title: "OGC City Geography Markup Language (CityGML) Encoding Standard",
            href: "https://www.opengeospatial.org/standards/citygml",
            status: "IS",
            publisher: "Open Geospatial Consortium"
          },
          "IFC": {
            title: "Industry Foundation Classes IFC2x Edition 3 TC1",
            href: "http://www.buildingsmart-tech.org/ifc/IFC2x3/TC1/html/index.htm",
            status: "IS",
            publisher: "buildingSMART"
          },
          "REST": {
            title: "REST: Architectural Styles and the Design of Network-based Software Architectures",
            author: "Roy Thomas Fielding",
            status: "PhD thesis",
            publisher: "University of California, Irvine",
            date: "2000",
            id: "rest"
          },
          "ngsi-ld": {
            title: "ETSI GS CIM 009 v1.1.1 Context Information Management",
            href: "https://www.etsi.org/newsroom/press-releases/1519-2019-01-etsi-cim-group-releases-full-feature-specification-for-context-information-exchange-in-smart-cities",
            publisher: "ETSI Industry Specification Group"
          }
        },
        doJsonLd: true
      };
    </script>
    <style type="text/css">
      html {
        background-image: none !important;
      }

      .table--query-params {
        background: rgb(241, 248, 255);
      }

      .table--query-params td,
      .table--query-params th {
        padding: 0.5rem;
      }

      .table--query-params thead, .table--query-params th {
        background: #ccf0ff;
      }
    </style>
  </head>
  <body>
    <section id="abstract">
      <p>To be completed.</p>
    </section>
    
    <section id="sotd">
      <div class="issue">
        <p>This entire document is a work in progress, and very little work has yet begun to implement the standards
          described herein. Detail discussed may be removed or superseded without warning; you are advised to follow 
          issues relevant to your work in <a href="https://github.com/urbanobservatory/standards/issues">this list</a> 
          until this document is stable.</p>
      </div>  
    </section>
    
    <section class="informative">
      <h2>Motivation and background</h2>

      <p>Networks of urban sensors are increasingly prevalent. There are many uses for these devices connected to the
        Internet of Things, such as sharing car park occupancy, pollution management, weather forecasting, public safety,
        and reactive traffic systems.</p>

      <p>There is a need for a standard that focuses on extensibility, reuse of established standards, and is
        comparatively trivial to implement as a layer on top of existing software and services. The ontologies and
        vocabularies recommended are selected because of their relevance to real-time sensor networks, and their
        ability to be used alongside related standards such as PAS 180 and ISO/IEC 30182:2017, descriptions of the
        built environment in [[IFC]], or [[CityGML]], or elements of JSON Schema and OpenAPI to create services and
        web applications.</p>

      <p>This document presents a proposed standard for <strong>publishing federated networks of sensors and services,
        focusing on mechanisms for discovery, obtaining real-time and historic data, and contextual data</strong>. It
        does this primarily by clarifying the use of existing standards, resolving ambiguity and omissions for
        implementation detail, and providing detailed examples. These combined create a linked federation of [[REST]]
        APIs, enabled by standardised hypermedia.</p>

      <section id="maturity" class="informative">
        <h3>Maturity</h3>

        <p>The maturity model comprises different levels that ultimately facilitate data integration across different
          domains, systems and data models. The aim of this standard is to achieve level six and move closer towards
          seven.</p>

        <ol start="0">
          <li>Data only available through propreitary interfaces</li>
          <li>Data available using a single data model and domain-specific interface (e.g. SIRI)</li>
          <li>Data available using an HTTP(S) API with developer-focused documentation</li>
          <li>Data available using a publish-subcribe model or real-time stream</li>
          <li>Data available using a [[REST]] API with a recognised hypermedia suitable for generating user interfaces
            and client-side validation</li>
          <li>Data accompanied by relevant context, such as links to geographic entities in other systems</li>
          <li>Data is fully discoverable by automated means</li>
          <li>Data is fully filterable, searchable and traversable and comprehensible by automated means</li>
        </ol>
      </section>

      <section id="principles" class="informative">
        <h3>Principles</h3>

        <p>This standard has been prepared to satisfy the following general principles.</p>

        <ol>
          <li>It MUST be possible to discover sensors in different cities and disparate systems by following sequential
            links from a single national or international entrypoint.</li>
          <li>Data SHOULD be accompanied by links to <a href="https://5stardata.info/en/">relevant contextual
            information</a>, through machine-readable hypermedia, and appropriate ontologies and vocabularies.</li>
          <li>Options for extensibility SHOULD be maintained and able to coexist within a single system, such as
            provision for controllers and actuation, data provenance, and the use of non-sensor but otherwise related
            ontologies.</li>
          <li>Implementation MAY take any form (i.e. any sensors, any database, any underlying communications protocols),
            provided the output and interface conforms to the standards herein.</li>
          <li>Entities including sensors MAY be partitioned across multiple APIs, with two-way links.</li>
          <li>This standard SHOULD be reuse existing standards, except where no viable option exists, or two
            standards are incompatible. It SHOULD be possible to integrate data published with this standard with
            a wide range of other systems and practices.</li>
        </ol>
      </section>
    </section>

    <section>
      <h2>Conformance</h2>

      <p>As well as sections marked as non-normative, all authoring guidelines, diagrams, examples, and notes in this 
        specification are non-normative. Everything else in this specification is normative.</p>
          
      <p>The key words MAY, MUST, MUST NOT, NOT RECOMMENDED, OPTIONAL, RECOMMENDED, REQUIRED, SHALL, SHALL NOT, SHOULD, 
        and SHOULD NOT in this document are to be interpreted as described in BCP 14 [[!RFC2119]] [[!RFC8174]] when, and
        only when, they appear in all capitals, as shown here.</p>

      <p>Data SHOULD be provided under a licence compatible with the <a href="https://opendefinition.org/">Open
        Definition</a> unless there are overriding reasons, such as personal data or the IPR resides elsewhere</a>.</p>
    </section>

    <section id="architecture">
      <h2>Architecture</h2>

      <p>A federated approach is adopted.</p>
        
      <p>The figure below shows the generalised architecture for a federated network of sensors and services.
        Implementation details such as the choice of database, sensor hardware, and communications
        networks shown in blue are outside the scope of this document; implementations are free to choose these 
        details and use any appropriate technology or codebase.</p>

      <div class="illustration">
        <p>
          <figure>
            <img src="figures/federated-architecture.png" 
             alt="Architecture for an (inter)national network of observatories, linked through shared standards and 
             registration of sensors against shared geographies" />
            <figcaption>Architecture for an (inter)national network, linked through shared standards
                and registration of sensors against shared geographies</figcaption>
          </figure>
        </p>
      </div>

      <p>Implementations MAY poll data directly from sensors and transform data in real-time, provided the eventual
        output is conformant to this standard. Implementations MAY also provide eventual consistency, or separate
        the archival of historic observations from the access to the latest observations.</p>

      <aside class="example" title="National UO network">
        <p>Diagram? Showing single entry point. Geographies. Roads. Sensors for air quality. Live data. Historic timeseries.</p>
      </aside>
    </section>

    <section id="api">
      <h2>Application programming interface (API)</h2>

      <section id="api-transport">
        <h3>Transport</h3>
      </section>

      <section id="api-serialisation">
        <h3>Serialisation</h3>
      </section>

      <section id="api-hypermedia">
        <h3>Hypermedia controls</h3>

        <section id="api-hypermedia-query">
          <h4>Use of query parameters</h4>
        </section>

        <section id="api-hypermedia-collections">
          <h4>Collections and filtering</h4>

          <p>TODO: Write some text here.</p>

          <section id="api-hypermedia-collections-spatial">
            <h5>Spatial selectors</h5>

            <p>TODO: Write some text here.</p>

            <table class="table--query-params">
              <colgroup>
                <col style="width: 20%">
                <col style="width: 80%">
              </colgroup>
              <thead>
              <tr class="header">
                <th>Parameter</th>
                <th>Description</th>
              </tr>
              </thead>
              <tbody>
              <tr>
                <td><p>proximityCentre</p></td>
                <td>
                  <p>MUST be used in combination with <em>proximityRadius</em>. Sets the centre of a circular or
                    spherical bounding area depending on whether height is specified. Only resources within the spatial
                    area are returned.</p>
                  <p>Uses the format: <em>longitude,latitude,height</em>. Height is optional. Longitude and latitude use
                    WGS84. Height is in metres.</p>
                </td>
              </tr>
              <tr>
                <td><p>proximityRadius</p></td>
                <td>
                  MUST be used in combination with <em>proximityCentre</em>. Sets the distance from the
                  <em>proximityCentre</em> in metres.
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <aside class="example" title="Use of proximityCentre and proximityRadius query parameters.">
                    <p>To request items within one kilometre of the WGS84 coordinates (-1.9, 52.2), append the
                      parameters <code>?proximityCentre=-1.9,52.2&amp;proximityRadius=1000</code>.</p>
                    <p>To request items within 100 metres of the WGS84 coordinates (-1.9, 52.2) at 200 metres elevation,
                      append the parameters <code>?proximityCentre=-1.9,52.2,200&amp;proximityRadius=100</code>.</p>
                  </aside>
                </td>
              </tr>
              </tbody>
            </table>
          </section>

          <section id="api-hypermedia-collections-sub">
            <h5>Sub-selectors</h5>

            <p>TODO: Write some text here.</p>
          </section>

          <section id="api-hypermedia-collections-conditions">
            <h5>Condition modifiers</h5>

            <p>TODO: Write some text here.</p>

            <div class="issue" data-number="18">
              <p>Possibility of additional modifiers <code>__in</code> and <code>__begins</code> still under discussion.</p>
            </div>
          </section>
        </section>

        <section id="api-hypermedia-pagination">
          <h4>Pagination</h4>

          <p>TODO: Write some text here.</p>
        </section>
      </section>

      <section id="api-authentication">
        <h3>Authentication</h3>
      </section>
    </section>

    <section id="struct">
      <h2>Structures, ontologies and properties</h2>

      <section id="struct-sensor">
        <h3>Sensor networks and observations</h3>

        <section id="struct-sensor-platform">
          <h4>Platform</h4>
        </section>

        <section id="struct-sensor-sensor">
          <h4>Sensor</h4>
        </section>

        <section id="struct-sensor-observation">
          <h4>Observation</h4>
        </section>

        <section id="struct-sensor-sampling">
          <h4>Sampling</h4>
        </section>

        <section id="struct-sensor-result">
          <h4>Result</h4>
        </section>

        <section id="struct-sensor-deployment">
          <h4>Deployment</h4>
        </section>

        <section id="struct-sensor-system">
          <h4>System</h4>
        </section>

        <section id="struct-sensor-featureofinterest">
          <h4>Feature of interest</h4>
        </section>

        <section id="struct-sensor-procedures">
          <h4>Procedures and provenance</h4>

          <div class="issue" data-number="17">
            <p>The [[vocab-ssn]] ontology provides alignment to the PROV ontology. Should we provide an example of how
            to do that?</p>
          </div>
        </section>
      </section>

      <section id="struct-geography">
        <h3>Geography</h3>

        <section id="struct-geography-geojson">
          <h4>Alignment to GeoJSON</h4>

          <div class="issue" data-number="14">
            <p>Creating a valid GeoJSON output will require a <code>properties</code> key in the object. This should be
            an optional approach for APIs that want to produce valid GeoJSON, by using JSON-LD nesting?</p>
          </div>
        </section>
      </section>

      <section id="struct-collections">
        <h3>Collections</h3>

        <section id="struct-collections-observation">
          <h4>Observation collection</h4>
        </section>
      </section>

      <section id="struct-metadata">
        <h3>Response metadata</h3>

        <section id="struct-metadata-pagination">
          <h4>Pagination</h4>
        </section>
      </section>
    </section>

    <section id="vocab">
      <h2>Vocabulary</h2>

      <section id="vocab-classes">
        <h3>Classes</h3>

        <div class="issue" data-number="22">
          <p>Handling of collections and views on collections is yet to be finalised.</p>
        </div>
      </section>

      <section id="vocab-discipline">
        <h3>Disciplines</h3>

        <div class="issue" data-number="24">
          <p>List is yet to be finalised.</p>
        </div>
      </section>

      <section id="vocab-props">
        <h3>Observed properties</h3>

        <div class="issue" data-number="23">
          <p>List is yet to be finalised.</p>
        </div>
      </section>

      <section id="vocab-units">
        <h3>Units</h3>

        <div class="issue" data-number="23">
          <p>List is yet to be finalised.</p>
        </div>
      </section>
    </section>

    <!--<section id="individual-systems">
      <h2>Individual systems</h2>

      <section id="protocols">
        <h3>Protocols</h3>
        
        <p>Strong preference for HTTP/2 to allow concurrent simultaneous requests to be multiplexed.</p>
      </section>

      <section id="serialisation">
        <h3>Serialisation</h3>

        <p>Should refer to [[!json-ld-syntax]] among others.</p>
      </section>

      <section id="vocabularies">
        <h3>Vocabularies</h3>

        <p>Detail of the other vocabularies we recommend use of, such as for units and measures.</p>
      </section>

      <section id="geospatial">
        <h3>Spatial features</h3>

        <p>Most likely some mixture of the [[!geosparql]] ontology and [[!geojson-ld]], because the latter should be 
          interpreted as valid GeoJSON by GIS clients.</p>
      </section>

      <section id="sensing">
        <h3>Sensing</h3>

        <p>Should refer to [[!vocab-ssn]], [[!hydra-core]] and [[!vocab-ssn-ext]] among others.</p>

        <section id="platforms">
          <h4>Platforms</h4>

          <p>Detail required here. Platforms are the physical things to which sensors are attached, so mainly a
            geographical relation.</p>
        </section>

        <section id="sensors">
          <h4>Sensors</h4>

          <p>Detail required here. Sensors are attached to a platform and produce observations.</p>

          <aside
              class="example"
              title="Request and response describing a Sensor with an ObservationCollection for each ObservedProperty"
            >
            <pre>
              GET https://example.com/sensor/a
              
              {
                "@context": {
                  [...]  // Full context needs to be written
                },
                "@type": "sosa:Sensor",
                [...], // Body needs to be written
              }
            </pre>
          </aside>
        </section>

        <section id="observations">
          <h4>Observations</h4>

          <p>Detail required here.</p>

          <div class="issue" data-number="6">
            <p>Presentation of observations is currently under discussion. Decisions are required on
              whether each metric should have its own <code>ObservationCollection</code>, whether a request should default
              to returning 24 hours of observations or a fixed limit, and handling latest observations.
            </p>
          </div>

          <aside class="example" title="Request and response describing an ObservationCollection">
            <pre>
              GET https://example.com/sensor/a/no2-concentration
              
              {
                "@context": {
                  [...], // Full context needs to be written
                  "lastObservation": {
                    "@id": "sosa:madeObservation",
                    "@type": ["sosa:Observation", "hydra:last"]
                  },
                  "allObservations": {
                    "@id": "sosa:madeObservation",
                    "@type": ["@id", "ssn-ext:ObservationCollection"]
                  }
                },
                "@type": "ssn-ext:ObservationCollection",
                "madeBySensor": "https://example.com/sensor/a",
                "lastObservation": {
                  "@id": "https://example.com/sensor/a/no2-concentration/observations/2019-05-31T19:45:00Z",
                  "resultTime": "2019-05-31T19:45:00Z",
                  "observedProperty": {
                    "@id": "https://example.com/property/no2-concentration"
                  },
                  "hasResult": {
                    "@type": ["sosa:Result", "qudt-1-1:QuantityValue"],
                    "unit": "something:MicrogramsPerCubicMetre", // Need to find vocabulary
                    "numericValue": "39.9"
                  }
                },
                "allObservations": "https://example.com/sensor/a/no2-concentration/observations"
              }
            </pre>
          </aside>

        </section>

        <section id="results">
          <h4>Results</h4>

          <p>Detail required here. Results are contained within observations, and are the actual data observed.</p>

          <div class="issue" data-number="5">
            <p>Presentation of results is currently under discussion. This needs to be informed by use cases, which
              should cover a wide range of possible data types.</p>
          </div>

          <p>Detail required here.</p>

          <aside class="example" title="Serialisation of different data types within a result">
            <p>It is preferred to use a <code>unit</code> that is as descriptive as possible, to assist people in
              comparing like-for-like data, such as air quality measured in migrograms per cubic metre and averaged
              over a period of an hour.</p>

            <h5>Numeric</h5>
            <pre>
              {
                "@type": "sosa:Observation",
                [...],
                "hasResult": {
                  "@type": ["sosa:Result", "qudt-1-1:QuantityValue"],
                  "unit": "qudt-unit-1-1:DegreeCelsius",
                  "numericValue": "22.4"
                },
                "resultTime": "2019-05-29T18:30:00Z"
              }
            </pre>

            <h5>String</h5>
            <pre>
              {
                "@type": "sosa:Observation",
                [...],
                "hasResult": {
                  "@type": ["sosa:Result", "xsd:string"],
                  "@value": "Fishcake"
                },
                "resultTime": "2019-05-29T18:30:00Z"
              }
            </pre>

            <h5>Image</h5>
            <pre>
              {
                "@type": "sosa:Observation",
                [...],
                "hasResult": {
                  "@type": ["sosa:Result", "schema:image"],
                  "@id": "https://api.example.com/camera-feeds/GH_A692B1/20190529/183429.jpg"
                },
                "resultTime": "2019-05-29T18:30:00Z"
              }
            </pre>
          </aside>
        </section>
      </section>

      <section id="filtering">
        <h3>Filtering</h3>

        <p>The Hydra standard doesn't currently offer any filtering, so this section will probably need to be quite 
          substantial.</p>
      </section>

      <section id="streaming">
        <h3>Streaming</h3>

        <p>Access to live and potentially filtered data via WebSockets.</p>
      </section>

      <section id="receiver">
        <h3>Receiver</h3>

        <p>Ability to receive data directly submitted from an instrument or another system, as opposed to pulling 
          through brokerage systems. What shape should this data take, in order that links to appropriate resources
          could be generated automatically?</p>
      </section>

      <section id="authentication">
        <h3>Authentication</h3>

        <p>Ability to register a new relation between two IRIs will require authentication and creation of trust 
          relationships. Likely to rely on a callback approach, one system asks for permissions on the other system,
          and once these are granted a callback is invokved on the requesting system.</p>
      </section>
    </section>-->

    <section id="discovery">
      <h2>Discvovery</h2>

      <section id="shared-geography">
        <h3>Shared geography</h3>

        <p>The proposal here is to have a national geography API and delegate authority to each city to be able to
          register sensors against.</p>

        <aside class="example" title="Shared geographies">
          <p>The national geography API contains resources corresponding to each local authority and city region. These
          </p>
        </aside>
      </section>

      <section id="linked-data-fragments">
        <h3>Linked data fragments</h3>

        <p>This is a way of allowing complex queries such as SPARQL against the data, without having to run a full-blown
          SPARQL database and exposing it to the world. The problem with exposing SPARQL endpoints and hitting them
          with POST queries for example, is the response cannot be cached. It does not work well with HTTP. Linked
          data fragments don't have this problem.</p>
      </section>
    </section>
  </body>
</html>
